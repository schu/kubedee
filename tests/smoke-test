#!/bin/bash

set -euo pipefail
set -x

readonly tmp_dir="$(mktemp -d "/tmp/kubedee-test-XXXXXX")"
trap 'rm -rf "${tmp_dir}"' EXIT

if [[ $# -gt 0 ]]; then
  readonly k8s_versions=($@)
else
  readonly k8s_versions=("v1.8.10" "v1.9.6" "v1.10.0")
fi

readonly kubedee_dir="${tmp_dir}/kubedee"
mkdir -p "${kubedee_dir}"
readonly k8s_binaries="${tmp_dir}/k8s-binaries"
mkdir -p "${k8s_binaries}"

kdee() {
  kubedee --dir "${kubedee_dir}" "$@"
}

for v in "${k8s_versions[@]}"; do
  bin_dir="${k8s_binaries}/${v}"
  mkdir -p "${bin_dir}"
  (
    cd "${bin_dir}"
    curl -LO "https://dl.k8s.io/${v}/kubernetes-server-linux-amd64.tar.gz"
    tar -xf "kubernetes-server-linux-amd64.tar.gz" \
      "kubernetes/server/bin/"{kube-apiserver,kube-controller-manager,kubectl,kubelet,kube-proxy,kube-scheduler}
  )
  cluster_name="test-${v}"
  kdee up --num-worker 1 --bin-dir "${bin_dir}/kubernetes/server/bin" "${cluster_name}"
  kdee smoke-test "${cluster_name}"
  kdee delete "${cluster_name}"
done
